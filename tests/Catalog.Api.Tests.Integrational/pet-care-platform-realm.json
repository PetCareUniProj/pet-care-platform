{
  "id" : "48d52524-7380-4fb7-96b5-8d0cace215c9",
  "realm" : "pet-care-platform",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "bruteForceStrategy" : "MULTIPLE",
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "001bf6a5-7091-4b60-a454-d9e56914dae9",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "48d52524-7380-4fb7-96b5-8d0cace215c9",
      "attributes" : { }
    }, {
      "id" : "492e7e77-c72e-4a37-ad8f-54740ecf2e81",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "48d52524-7380-4fb7-96b5-8d0cace215c9",
      "attributes" : { }
    }, {
      "id" : "6cfd306b-dae5-41fb-b930-4b1e90d99196",
      "name" : "default-roles-pet-care-platform",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "48d52524-7380-4fb7-96b5-8d0cace215c9",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "76741047-b3db-4fa3-9b22-af4c58b76811",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "05d9276d-0c9e-4b7f-b7e1-9206d422fba7",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "99014b0c-7dbc-44f6-8bad-2842680304fb",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "803a8e3e-bad1-4e55-8d4d-b024bd24c5e7",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "7d778209-d5a1-4cf6-8934-f96c389d881c",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "5dd2ee2a-76f6-40b9-8515-11528dd677ee",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "5735ee82-05c9-4c62-b539-2d6a3f9eef22",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "e8d14612-a3eb-420a-aa02-f863fbedf761",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-users", "query-clients", "manage-clients", "query-groups", "view-identity-providers", "create-client", "manage-users", "view-clients", "view-realm", "query-realms", "manage-events", "impersonation", "view-events", "manage-authorization", "view-authorization", "manage-identity-providers", "query-users", "manage-realm" ]
          }
        },
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "eccab137-4f15-4cec-85ac-1e80942bb9ca",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "49e81004-c39c-4571-b081-cc14f3fa4271",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "44603961-9a14-40a5-9fa5-319798525dda",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "12d36cca-f8a1-4d42-8d7e-30a5a1425cd8",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "de8aa64b-9940-4173-bce2-b32e004d5101",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "6b9ea268-8450-415f-8dcd-758f4ed27e85",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "26d51030-2265-40f4-abf0-ea38aa1ce4a3",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "15412404-6ac1-4598-b05c-9660ab503e71",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "ede445c7-1dbd-4510-9e32-9621135e7dbc",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "88e598eb-9c68-48fa-aaa8-18aa302c943d",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      }, {
        "id" : "295b67c6-8dae-468a-bccd-36ad515c4c4b",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "cd043337-0836-4324-a7b5-4c7c03bd30ab",
        "attributes" : { }
      } ],
      "catalog-api" : [ {
        "id" : "e510ebe3-f6b1-4213-93e0-5c97c2223782",
        "name" : "Admin",
        "description" : "",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "6df3bd67-7d34-4cd6-b872-5ff39176a725",
        "attributes" : { }
      } ],
      "public-client-web" : [ ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "d8bdf95d-46c4-4b9f-ba8e-b535f913cb11",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9e02b6db-9bd1-4339-bb0a-b92b52837694",
        "attributes" : { }
      } ],
      "Postman" : [ ],
      "account" : [ {
        "id" : "eb9e520c-15ed-45ef-97a7-08bd9cd31e89",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74c4417-7fdd-4d4e-b86a-34b7d7763ce8",
        "attributes" : { }
      }, {
        "id" : "dec7c7e6-0f67-49c9-8644-e19b79777155",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74c4417-7fdd-4d4e-b86a-34b7d7763ce8",
        "attributes" : { }
      }, {
        "id" : "9ddeaebc-81ba-41cd-95b4-671253b3334f",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74c4417-7fdd-4d4e-b86a-34b7d7763ce8",
        "attributes" : { }
      }, {
        "id" : "caf45673-bf27-47e0-ba3e-1c39ea174b7c",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74c4417-7fdd-4d4e-b86a-34b7d7763ce8",
        "attributes" : { }
      }, {
        "id" : "0c88941d-fcd0-4688-8098-4e7a923c32d0",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c74c4417-7fdd-4d4e-b86a-34b7d7763ce8",
        "attributes" : { }
      }, {
        "id" : "9f20450f-9a2c-4c93-b771-f71a37c3aaa4",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c74c4417-7fdd-4d4e-b86a-34b7d7763ce8",
        "attributes" : { }
      }, {
        "id" : "8e297f92-05c7-45ea-af80-8dc3486c7e25",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74c4417-7fdd-4d4e-b86a-34b7d7763ce8",
        "attributes" : { }
      }, {
        "id" : "144676bb-0d58-4430-a058-2c5697a415c7",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74c4417-7fdd-4d4e-b86a-34b7d7763ce8",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "6cfd306b-dae5-41fb-b930-4b1e90d99196",
    "name" : "default-roles-pet-care-platform",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "48d52524-7380-4fb7-96b5-8d0cace215c9"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "73a0b851-96db-4264-80a4-993199579a18",
    "username" : "admin",
    "firstName" : "admin",
    "lastName" : "admin",
    "email" : "admin@admin.admin",
    "emailVerified" : true,
    "createdTimestamp" : 1758622654465,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "e65c4a02-1e00-46c5-8e47-7f78f3b8891d",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1758622691697,
      "secretData" : "{\"value\":\"NofkXbHmFkhLExq+Kk4pGBwIAfsjYGWIVoVNY0M2Rss=\",\"salt\":\"KkejRGCVOP/biCTkL/pv8w==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-pet-care-platform" ],
    "clientRoles" : {
      "catalog-api" : [ "Admin" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "785ca28e-df64-4bc9-9ed9-be0868494d47",
    "username" : "test",
    "firstName" : "test",
    "lastName" : "test",
    "email" : "test@test.test",
    "emailVerified" : true,
    "createdTimestamp" : 1758622672254,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "14b2b4d0-bf9b-4291-b9f4-5780cc9c7cea",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1758622679303,
      "secretData" : "{\"value\":\"dRxyGpW+GW/CTgH7qAp4S0ouMP0/3TDSfTHOBKG8+x4=\",\"salt\":\"w7jkX87BQZ4H3d+llojErw==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-pet-care-platform" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients": [
    {
      "id": "9d474f38-3587-468d-96f5-b90353a9e752",
      "clientId": "Postman",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": true,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [ "https://oauth.pstmn.io/v1/callback" ],
      "webOrigins": [ "https://oauth.pstmn.io" ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "standard.token.exchange.enabled": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes": [ "address", "phone", "organization", "offline_access", "microprofile-jwt", "catalog:all" ]
    },
    {
      "id": "c74c4417-7fdd-4d4e-b86a-34b7d7763ce8",
      "clientId": "account",
      "name": "${client_account}",
      "description": "",
      "rootUrl": "${authBaseUrl}",
      "adminUrl": "",
      "baseUrl": "/realms/pet-care-platform/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [ "http://localhost:40607/*", "/realms/pet-care-platform/account/*" ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "standard.token.exchange.enabled": "false",
        "post.logout.redirect.uris": "+##http://localhost:40607/*",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes": [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    },
    {
      "id": "dd9b73f5-a44c-41d1-b306-ed44a6ca4ca4",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/pet-care-platform/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [ "/realms/pet-care-platform/account/*" ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "ad6f7c70-7b29-4395-82c9-d478d559c68e",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes": [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    },
    {
      "id": "f30c592c-feb6-45c0-a04e-15d32dd9654e",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes": [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    },
    {
      "id": "9e02b6db-9bd1-4339-bb0a-b92b52837694",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes": [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    },
    {
      "id": "6df3bd67-7d34-4cd6-b872-5ff39176a725",
      "clientId": "catalog-api",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "oRL4la55pi1uMlJMKSlg3hrhLfvKrZsg",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1758492800",
        "backchannel.logout.session.required": "true",
        "standard.token.exchange.enabled": "false",
        "post.logout.redirect.uris": "+",
        "frontchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "use.jwks.url": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes": [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    },
    {
      "id": "7d353f0b-c3fa-493d-8404-eb05d92de641",
      "clientId": "public-client-web",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": true,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [ "/*" ],
      "webOrigins": [ "/*" ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes": [ "address", "phone", "offline_access", "microprofile-jwt", "catalog:all" ]
    },
    {
      "id": "cd043337-0836-4324-a7b5-4c7c03bd30ab",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes": [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    },
    {
      "id": "edd638dd-2d3e-4d4e-9ad3-74c875dcf032",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/pet-care-platform/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [ "/admin/pet-care-platform/console/*" ],
      "webOrigins": [ "+" ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "81a8dd3d-6188-4eab-806b-e9e98e6bb36e",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
      "optionalClientScopes": [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
    }
  ],
  "clientScopes" : [ {
    "id" : "c667e73e-f3e6-45d0-9b8d-c00f4c29bdb2",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "7299a1f5-b36a-4c44-a11b-af04a6e2df81",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "fc1a8340-d3bb-46fb-89d0-70091a82ed27",
    "name" : "service_account",
    "description" : "Specific scope for a client enabled for service accounts",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "9745336e-2d97-4a0b-b834-3fc9f1cd548c",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "00d5f4ca-c65d-4d3d-af69-eee88d37803b",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9aeb95b4-46a6-4eb5-8596-e11546da2aef",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "3d33ba60-5040-424f-a076-52a482a45875",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "dc386a89-6c4b-418a-b8eb-5ffed5bb342b",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "e9cf766f-234f-4df1-979f-2543c3d59a2b",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "3bc9b8ce-640e-427c-9c36-19160fa5ae08",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ecec9d70-7c90-42b0-86c2-04dae03df970",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "61c199b8-4172-4b8c-94bd-ffe106c7ed98",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a0201d06-010b-4e5e-b207-4ce05cd1e632",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b98aceef-b9ab-4221-b3f7-5cb8ad93f0a0",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a8d18801-519b-447c-889e-d845e0f30496",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "b4d31e4a-4c40-451a-af01-8612ac0d28e1",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9ab368a8-9a21-4e20-91fe-83fba2099fa1",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "ad2a9235-5a00-4d66-ade5-04cf43c6fa6c",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3409f64f-8990-4181-816e-d9676f8e5489",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e3c4233f-5c27-45fd-838c-cd919b0cca4b",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4feb07d9-17d1-497c-8700-2eca95042411",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5148a192-db3a-42be-9cde-4bae92a1ff83",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "15c5746e-a7eb-4dca-8459-7467b2844176",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "b022d934-c512-49d8-bca8-521dd5c0eada",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "99a102b2-b483-4d6c-900a-4138f79b0a87",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "5ab89fc6-3739-4a41-b14a-ae731b56ef48",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "e615d9e0-7a42-4e96-9b95-a6496713c132",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cc7dc968-5552-41a0-9548-06ff5a3a7abb",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "1bdf4d99-d02b-4431-9a38-420561967349",
    "name" : "catalog:all",
    "description" : "",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "gui.order" : "",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "404c11d8-3410-44f8-af8b-8ce270420077",
      "name" : "catalog api audience",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "catalog-api",
        "id.token.claim" : "false",
        "lightweight.claim" : "false",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "false"
      }
    } ]
  }, {
    "id" : "be8afc9f-d4e8-43fa-a8ea-a843870b083b",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "e0a10be6-97d1-47ff-a627-861b520b2a64",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "77b6bbaf-a73f-4d62-a12c-411be153aa30",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "6003fe99-8579-4453-a582-349fc5fd835f",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "87e70e65-b313-4326-975b-9e10515314ce",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "afa803a4-c28f-46ec-97d3-fe8df4685d6f",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "6cc4f8bc-d957-4559-a8b0-11d6f7317459",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "b656f875-15de-4cd9-9aee-b4ef1d8cd306",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "96216c8f-d0ba-419e-ac1f-aad32ee364b0",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "7a4ac0f1-2d49-4579-a9cb-2f649b5164ed",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "59e072ec-eb41-4de7-adb3-ca21696543b0",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "c510c1cc-5ab0-451a-8c69-7664d846bb1f",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "e7abbe54-2a4a-4bf8-9913-e5551b8c3c68",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "c78aae6e-1240-434d-a7c2-7e0c086c8773",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "9c6d9db6-9eb8-4e82-a9f6-ea0c4b8619b2",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "8391faa0-037d-4291-b016-40497f607982",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "c85847cf-2e3f-4c93-93b6-208d1278a9af",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "5a2aaf8b-5675-4580-bf01-d9dd52ce6ed6",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "a90bdab1-a618-4329-981d-1c512359b177",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "02ec7942-788b-442e-98bc-a52f10f70b34",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization", "catalog:all" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "01d0a4d0-b91c-44a4-803d-a45faaea1774",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "e2acc16a-172e-4853-ae7a-ab4311eeb966",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "f552fac4-693f-4cf6-8a54-fbc4594bf26a",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "saml-user-property-mapper", "oidc-usermodel-property-mapper" ]
      }
    }, {
      "id" : "65587b59-67f6-4b34-a9c8-81c03830e2a1",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "f7f8ac45-2602-46a1-b83c-96c8ec169800",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "oidc-usermodel-property-mapper", "saml-user-attribute-mapper" ]
      }
    }, {
      "id" : "af004108-61eb-46dc-aeec-1bbf2268de54",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "3f473977-02cb-4a36-be9b-d792497d4c01",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "2e8aa731-0e74-4d32-bd07-93c4d848ff7e",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "9f64cfcb-b549-4f28-8ceb-96f0e1eec308",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAtyUft5x4okojDE6Qd+iCjlkNi8s8o37gI3fQEbWA4XI2eMCWUp0Xh6xaTxrh1/ujpzzeUGPPTYGryNJfmg1ciJ9+N17o9LTyCKntkeJkFtR+tleumcxlJAIlpna70sVQSuCfAlixzloIoqhDDcNgl0hjHaYHYcbuq2hNzNlq8Q+0yO/kpoBnqMyk889eDSXq2JU0ITQSkf9bdkq2Gyte0Or+izV/xdtRtUoIrAki5vK+F1wtul4gB40jH3K0vIPYdnLqbtl8Lc7erjRS1Ixs2rNMgc8u+PNvPvYQj1LOBVwgneWF7K2i61WdQen4P1RJaBM3053oBODJWAxhoMBsvQIDAQABAoIBADf6KdKWCa0Y2dOGI9Pyhgz6HRDQQq16NwnAMiFnh4fgv9Nykb+Ycjuuqz+oaMT6DdAs44pQp2j6LEZKPpw4X0MG9K353VwF/kA1p/5B4vOzaTNUY3Jwra0u1tElU00dr+fi9dbiwx3eGOuWYEBRqjEzF9BVEcaJ5iMP00+8WFprPGaDOg2l1DAgBk94dY6UEukV79d9kC6i/dbdJM+4PSaBEjsLE75drFHtZzr9I4AR4bMdGEw7XMOufhMqYe1KpNKWEaDrRAhtC1AZjEYnMRpLkXD70sDsMdalToO3nkR7uRSpm8c8ZS4RxngEOSM8FpJ/PGUZ5Nr0EJLYQmDNwmUCgYEA8Ra7bfI5Rv6InCLon6W1pCmcdGvXx0GD9K706Kl+QFrjURU8G+cxXSdB7wHMMueuFTHVFZQjV3Rh+LsckaKtx7bR58A3fM3PwDREDDiB4UwdSGtz+sXwcGXhQ/QfYPIEaKKtsWxaLd5aBCTjd6FIwXCdjRs+ZluWnKHI++6fARsCgYEAwnjxEQbQVnuqnY7u1VGGeBOueKhr+svvu8TODjP5DDodFnllNN8RSYKFLY8JfbA+T5n5Tj5jdn/7ddMy417Kcl+c3fBzvyVL0Pm0NELRFQb6x0JktzmbYHPL35jpWi9lMc9ZAHeVBu4/PJzu+Nw+S+ew+yrNnwTzRoDoeeNBfwcCgYAdlmecP6zt3JERcGtSJHkdU4oC87VAm/bA0bP21c5LwZvCOLPuzLnPL+E0nujbmnlP2pTHGC4aLotThkskSG3BY9tw8LMemveTJBbx1QGDj97MI3vRW/d9I9O4jj5HnIwT91sPujd7B53OgmR0KxQNwW9kgOJwl27tfCF5Ybib3wKBgQCqvs9BmM7xL9FEVwuhZdv/r6AfNhjgcZBCN3CHjeBbeOazJdDTVAt0lFFkB9NYdJaxA0qeBS8FCyd4cv+aHE75jrNHNegaap+fkq5CuGuk36TtsICHUt/2FpVo83PnB/f8fMXzIAtLs4D4Mf2rqIxVzs5YKGOy/ACw5Vu4MOz/nwKBgQCBUqqAPsxO73XtJYlMOeK/WJKKOUJ4/Hw6PpEZT12s8vBwfMqNfJ4JacfHbDRI83g3Ke2u5PWy6vtAPxfduCaSoxRMuqXYT11MGBjoA4Evfdl5bTqZDYAkczjiPJ4zMDXbEfkCeDyJy+V2DK2lE4HBZzCXLgDRfJyqa9SSppWeyg==" ],
        "certificate" : [ "MIICsTCCAZkCBgGZcloQ4TANBgkqhkiG9w0BAQsFADAcMRowGAYDVQQDDBFwZXQtY2FyZS1wbGF0Zm9ybTAeFw0yNTA5MjIxNjUzNDlaFw0zNTA5MjIxNjU1MjlaMBwxGjAYBgNVBAMMEXBldC1jYXJlLXBsYXRmb3JtMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtyUft5x4okojDE6Qd+iCjlkNi8s8o37gI3fQEbWA4XI2eMCWUp0Xh6xaTxrh1/ujpzzeUGPPTYGryNJfmg1ciJ9+N17o9LTyCKntkeJkFtR+tleumcxlJAIlpna70sVQSuCfAlixzloIoqhDDcNgl0hjHaYHYcbuq2hNzNlq8Q+0yO/kpoBnqMyk889eDSXq2JU0ITQSkf9bdkq2Gyte0Or+izV/xdtRtUoIrAki5vK+F1wtul4gB40jH3K0vIPYdnLqbtl8Lc7erjRS1Ixs2rNMgc8u+PNvPvYQj1LOBVwgneWF7K2i61WdQen4P1RJaBM3053oBODJWAxhoMBsvQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAHNxiXwhXoM1lAKJ0GoIbsUfacZlzUWsA9xMeHIn7aeDgY81MK86kWcEPx3av/IiJFhypAQ2qaCnSfaEE1TimDxr6saiNHYnZpIBnKm6LX+/y90KeyF12PfPFPCRfI2CXnJUwRNzv3038MxXCwJXcswZ+6ggfW4sIR3hE2I9bbWQF1n5O1IPMS2cmT86Zymbbq+MueDGaszcEgQirHDBuLlR8Oema0eV4k6zMF/Hy2LV5CWZ3RX629cMPozSx4LVqWg7cS3BLl5W7aAyu7uZgs3xZB3bUXLUvJlr7TUG4YkhS3SCSQS3ocDNRvoInQ/oYpu2kRKFCWjcgWAwaaWDx2" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "26c0037f-3feb-4f3d-8358-fa8fa4d4b6ae",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAreVQHRdmc6U1x94CWfQSCyLLhUMruO3D3qAUgcaTPRjP6hLoBXq96s7j10EgSPM3SYnQLpxCQsKh4E4qndTGNEbFWfOR9MQCyQpv0I/1UgCJ8w5dGllMPHm1oMztgvvZlKmoirBj2jYCsudp4mnQLWwrv27iif9o0B1u9ZtJ4Dfy3JaHEy1WOzcgF4OKAuiSQXqWhb6KC1JkBM8d7OLqhug7i5VsmWbqjJuXDIdg6YQix42X1qKMn01NrUD70Zyc3HRx8wl/zMwak9P/RirwLqx0KgUjZIpulSgIJ4nzkYGKO8zA1e0Djv8+IrbHuM8+TP0ErAhbjYwGDDRq/HGd+wIDAQABAoIBAAm8PcjzJ2wwApvG5RDOJjhzYTt7sDXxMbcD9UHysQmJmxI6rryny3waywyg+8K5ww2d5obFfrwoE1HwblhZsiL5F1Fa3n/6fUFuESZ2+L/3gcGWu0WfXDJCihWPg3iCywKUoPfquhxcS7hiVj4zuFDirmxQM+SP5PlJvI2JfRBNWe5k4MJSdHssh/PHadsYZl0kR5Io3960VGzPu07AP9VYWJAOQWRUhuuzlxkWxWZ9CzPLvdf2t7ZB6BoSWpXaGBXK5yQqF1UddxJL0k0nchRor6XIzzJhIfxCepDXk+uyO1o2NUFoUNBWCd+iiYl8u5KuOEkdw3rHepnqmLmIh+kCgYEA1COO4ICXSTWOkew9n/JQcDVBMsY5YIu8n4UmynmjGGqNbTwHe5tNOAKRKsKfsAMxjJozW3yH+lcPyHp0SBaYx65nPtOfK42fDtD3Gh4HpU5Ud+oXea+4/CKKHgQcCcYefSzfJenj2H5eElFgDPY/a8jQWaEDj68GpcGcpCWgL00CgYEA0dmOyrOS/prVexlir8SpnTr/W5+sGAO4/opkScmo/7OKvzYrY7rGOwAzrF0IPcE94qkQuCa2DM6C/WuQTUnLY+ALmXnlTjtaPw/C0+yjc1rz2yTk32tA64wxAoltuHH+/fTLLJEUqltMPelzrHRldydR7gCed2ey+00XR0iZ7mcCgYAF3y4XPLfzSM43b8iM4tIjKPYzB5WS/IsuByt5s0A2bsyXV3AFldjfUgLeoiB1aME4WRRO1fWVkk9XhzwsuqNj84ncDVN8iyD58gLE8EvZ4X8pCou3zItcP0B/cDGue5Ngd5t9mym5VlYYP7Re53n968MImBJXKcsPT3qceIYkiQKBgGFIiGf0I9sgkING23c8pp0bcrJZLYDciPCH28JRWKVh6JqIVEkhlzBXAZ2Qa3ellDj1w6h7Wb5KJnOxX+5UnZOpk/cMiX9hCI9fkSSJ+aRKr+4SBoCEyk3oafgRGep9/oZg66e3gmsPdCLnjRaPx1IbymGZq90TF+hkbrw/Lg1VAoGBAIUFhNGAXsDZVJ4+0l+bfgy+0ihtblG9eL3RAwRpmdE1gzbPqzJyGgIbeHbNrrhZNeDQlc2+AcqvamGPKl+Us8p41ES7AdMIv6R6BIPnLfL8sdBRwSyAcgZ8xEaynXgUBEcpX9b4RVJEI1D037KR6jId85Qi9Yr1bglnE+b9yY2x" ],
        "certificate" : [ "MIICsTCCAZkCBgGZcloRJDANBgkqhkiG9w0BAQsFADAcMRowGAYDVQQDDBFwZXQtY2FyZS1wbGF0Zm9ybTAeFw0yNTA5MjIxNjUzNDlaFw0zNTA5MjIxNjU1MjlaMBwxGjAYBgNVBAMMEXBldC1jYXJlLXBsYXRmb3JtMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAreVQHRdmc6U1x94CWfQSCyLLhUMruO3D3qAUgcaTPRjP6hLoBXq96s7j10EgSPM3SYnQLpxCQsKh4E4qndTGNEbFWfOR9MQCyQpv0I/1UgCJ8w5dGllMPHm1oMztgvvZlKmoirBj2jYCsudp4mnQLWwrv27iif9o0B1u9ZtJ4Dfy3JaHEy1WOzcgF4OKAuiSQXqWhb6KC1JkBM8d7OLqhug7i5VsmWbqjJuXDIdg6YQix42X1qKMn01NrUD70Zyc3HRx8wl/zMwak9P/RirwLqx0KgUjZIpulSgIJ4nzkYGKO8zA1e0Djv8+IrbHuM8+TP0ErAhbjYwGDDRq/HGd+wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQATMgRqgCH2I8UsLsEXGHSfB7HQ3tP1WGt7vZVAQwz8uySFEt+lWMecOI/0uYajP8+utootq9BcbkiWB4KznFja9rs9EUY1fbiSBZhe4515gSnjLvmYiSvxnZuS2CmmbByK0Qe7fFNCJf+bc2jTRnTh8u20WtrxzHSe47JfnGVZlnBlPRw4QMZnYg5dGuIRB+8gupdx8XNxJrWZ52PBESEvVicGDt9ff5sdNZJ0ia6EZddV67CcH9M4ZzVeXPT+n55DUuKq9b8gF0nf4NsL88mSfmkUzGEH2BRACvtUMwQyFVyJl2/4m/DGrPmrZ1o0xZoIsyZB6zIiNG8uYYnPlm4X" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "90ba0f4c-fd4a-4c94-9f3f-50eeb56c5201",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "42bbba03-b56a-452b-8eef-8ec6d4e82522" ],
        "secret" : [ "HFjlHV_DjUnv9BN6MuDZ56SQuL-E5ijCJVYVMuns51IRbO1dSxzXOGRzllQxlvvWMQsfecfmDn22g2gy78FKiSYMgmDMZlkWq5-5czBwznDn0-OJyKt3EGAGo2TlHX_pmVVJsLqUGhqFbEcv-SJoHfMCkyBMAa77yt8MVZwj8W8" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "6077cf81-57c6-48b2-84cc-d40f1b9f1a92",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "1d67fec2-c445-47a4-acd2-e4d11e384e96" ],
        "secret" : [ "1D5BKT-JxPF2vaHVt4g1qw" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "a2d4f09f-7a13-46ff-a6f0-98724b424c7a",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "61a63d98-c0b6-476c-91fb-ac58798dad5e",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b0a5ed25-759a-40b7-b845-2c380c4f2c66",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3cced10c-db73-47d8-b9e5-f1305a086b77",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "86bf993d-2783-480d-ae27-abf3159e0f9c",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "48c932e6-e09f-4d62-81f4-b4e49c38cda1",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bc3e00e1-59c1-4a11-a399-2b59ca1d72c3",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "84eb3865-5f97-44ef-8ddf-77feda30f3c5",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4415f166-3cf1-40ba-9c15-196c4bd724ba",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4a546320-bc69-44e8-b641-035b4b13e2d2",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bbb81e0e-a0d0-46a1-a639-afa798160d7d",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b9d14608-755c-4c3e-bff8-05553bb8d2b4",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "08834dc6-f003-467b-ac26-88f99ed94e35",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d7e4cdaf-25be-45ae-b76f-8ae8e270f752",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "52753233-e799-43aa-98bb-6a225f830c7e",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e5ac409c-7991-4c51-bbaa-33da931e94bd",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 50,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ecd0c81c-1741-4f2a-8fd6-d014c84e3031",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "17d94c7c-d14d-4dea-852a-c1575cbbd56a",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "77154c0b-36f9-426d-b7bf-83a6459667ec",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a7135b9e-a4bf-4e32-ac72-a9777bb4a7d1",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9bf151ae-6683-4c69-92c2-8a29ba7a2529",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "1ff8dd92-a939-4222-a679-99228e40d492",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "02ced42e-c5d5-486e-9ab1-a576f83c2d15",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "26.2.5",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "verifiableCredentialsEnabled" : false,
  "adminPermissionsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}